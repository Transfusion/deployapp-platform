version: "3.4"

services:
  dapp-rabbitmq:
    image: rabbitmq:management
    ports:
      - 15672:5672
      - 25672:15672
    networks:
      - deployapp_net

  dapp-redis:
    image: redis
    environment:
      REDIS_PASSWORD: password
    ports:
      - 16379:6379
    networks:
      - deployapp_net

  dapp-db:
    image: postgres:latest
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: deployapp_dev_1,deployapp_storage_dev_1
    ports:
      - 15432:5432
    networks:
      - deployapp_net

  dapp-backend:
    build:
      context: deployapp-backend
      dockerfile: ../Dockerfile-dapp-backend

    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CONFIG_LOCATION: file:///config/

    volumes:
      - deployapp-backend-sync:/app
      - ./deployapp-backend-config/:/config

    working_dir: /app
    command: ./gradlew bootRun -PjvmArgs="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010"

    ports:
      - 18080:8080
      - 18082:8082
      - 15010:5010
    networks:
      - deployapp_net

  dapp-storage-service:
    build:
      context: deployapp-storage-service
      dockerfile: ../Dockerfile-dapp-storage-service

    environment:
      # PLEASE CHANGE_THIS
      GPR_USERNAME: CHANGE_THIS
      GPR_PAT: CHANGE_THIS

      SPRING_PROFILES_ACTIVE: dev
      SPRING_CONFIG_LOCATION: file:///config/

    volumes:
      - deployapp-storage-service-sync:/app
      - ./deployapp-storage-service-config/:/config

    working_dir: /app
    command: ./gradlew bootRun -PjvmArgs="-XX:+UseCodeCacheFlushing -XX:ReservedCodeCacheSize=128m -XX:StartAggressiveSweepingAt=50 -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -Xdebug -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=20010 -Dcom.sun.management.jmxremote.rmi.port=20010 -Djava.rmi.server.hostname=127.0.0.1 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010"

    ports:
      - 19080:8080
      - 16010:5010
      - 20010:20010
    networks:
      - deployapp_net

  dapp-web:
    image: nginx:alpine
    volumes:
      - ./deployapp-web-config/nginx.conf:/etc/nginx/nginx.conf
      - ./deployapp-web-config/certs:/etc/nginx/certs
    ports:
      - "12345:12345"
      - "12346:12346"
    networks:
      - deployapp_net

  dapp-frontend:
    build:
      context: deployapp-frontend
      dockerfile: ../Dockerfile-dapp-frontend

    volumes:
      - deployapp-frontend-sync:/node/app
      - ./deployapp-frontend-config:/node/app/environments
      - /node/app/node_modules
    
    # proxy this through dapp-web nginx too because of HSTS during oauth2 redirect
    # https://stackoverflow.com/questions/47207364/safari-is-forcing-https-on-everything-when-i-dont-want-it-to
    # ports:
    #   - "3000:3000"

    working_dir: /node/app
    command: bash -c "bash post_install.sh && WDS_SOCKET_PORT=0 npm run start:dev"
    networks:
      - deployapp_net
    
networks:
  deployapp_net:


volumes:
  postgres:
    external: false
  deployapp-backend-sync:
    external: true
  deployapp-storage-service-sync:
    external: true
  deployapp-frontend-sync:
    external: true
